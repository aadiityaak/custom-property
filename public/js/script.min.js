/*!
 *  v1.0.2 (https://velocitydeveloper.com)
 * Copyright 2013-2024 Velocity Developer
 * Licensed under GPL (http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)
 */
document.addEventListener("DOMContentLoaded", function () {
  // Fungsi untuk memeriksa dan fetch data jika belum ada di local storage
  function fetchDataIfNotExists(storageKey, url) {
    if (!Lockr.get(storageKey)) {
      fetch(url)
        .then((response) => {
          if (!response.ok) {
            throw new Error(
              "Network response was not ok " + response.statusText
            );
          }
          return response.json();
        })
        .then((data) => {
          Lockr.set(storageKey, data);
          // console.log(
          //   `Data berhasil disimpan ke local storage dengan kunci: ${storageKey}`
          // );
        })
        .catch((error) =>
          console.error(`Error fetching ${storageKey} data:`, error)
        );
    } else {
      // console.log(
      //   `Data dengan kunci ${storageKey} sudah ada di local storage.`
      // );
    }
  }

  // Memeriksa dan fetch data jika belum ada di local storage
  fetchDataIfNotExists("stateData", customPluginData.jsonState);
  fetchDataIfNotExists("cityData", customPluginData.jsonCity);
  fetchDataIfNotExists("addressData", customPluginData.jsonAddress);

  // Fungsi untuk mengisi elemen <select> dengan data dari local storage
  function populateSelectWithStateData() {
    const selectElement = document.getElementById("cp_province");
    if (selectElement) {
      const stateData = Lockr.get("stateData");
      console.log(stateData);
      if (stateData) {
        selectElement.innerHTML = "";
        stateData.forEach((item) => {
          const option = document.createElement("option");
          option.value = item.label;
          option.setAttribute("data-id", item.value);
          option.textContent = item.label;
          selectElement.appendChild(option);
        });
        console.log(
          "Elemen <select> berhasil diisi dengan data dari local storage."
        );
      } else {
        console.log(
          "Tidak ada data stateData di local storage atau data tidak valid."
        );
      }
    } else {
      console.log("Elemen <select> dengan ID 'cp_province' tidak ditemukan.");
    }
  }

  // Panggil fungsi untuk mengisi elemen <select>
  populateSelectWithStateData();
});
